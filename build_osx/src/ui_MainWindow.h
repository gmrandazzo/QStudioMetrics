/********************************************************************************
** Form generated from reading UI file 'MainWindow.ui'
**
** Created by: Qt User Interface Compiler version 5.15.1
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MAINWINDOW_H
#define UI_MAINWINDOW_H

#include <QtCore/QVariant>
#include <QtGui/QIcon>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QDockWidget>
#include <QtWidgets/QFrame>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMdiArea>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QProgressBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QSpacerItem>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QTextEdit>
#include <QtWidgets/QTreeWidget>
#include <QtWidgets/QWidget>

QT_BEGIN_NAMESPACE

class Ui_MainWindow
{
public:
    QAction *actionOpenProject;
    QAction *actionQuit;
    QAction *actionPCA;
    QAction *actionPLS_Regression;
    QAction *actionAbout;
    QAction *actionAdd_Remove_Variable_Labels;
    QAction *actionSaveAs;
    QAction *actionExport;
    QAction *actionUPLS;
    QAction *actionLog_Window;
    QAction *actionProject_Window;
    QAction *actionUPCA;
    QAction *actionNewProject;
    QAction *actionTest;
    QAction *actionPCA2DScore_Plot;
    QAction *actionPCA2DLoadings_Plot;
    QAction *actionPCA3DScore_Plot;
    QAction *actionPCA3DLoadings_Plot;
    QAction *actionUPCA2DScore_Plot;
    QAction *actionUPCA2DLoadings_Plot;
    QAction *actionUPCA3DScore_Plot;
    QAction *actionUPCA3DLoadings_Plot;
    QAction *actionPLS_Plot;
    QAction *actionPLS2D_tt_Score_Plot;
    QAction *actionPLS2D_pp_Loadings_Plot;
    QAction *actionPLS2D_ww_Weights_Plot;
    QAction *actionPLSPred_vs_Exp;
    QAction *actionPLSR2_Q2;
    QAction *actionPLS3D_ttt_Score_Plot;
    QAction *actionPLS3D_ppp_Loadings_Plot;
    QAction *actionPLS3D_www_Weights_Plot;
    QAction *actionUPLS_Plot;
    QAction *actionUPLS2D_tt_Score_Plot;
    QAction *actionUPLS2D_pp_Loadings_Plot;
    QAction *actionUPLS2D_ww_Weights_Plot;
    QAction *actionUPLSPred_vs_Exp;
    QAction *actionUPLSR2_Q2;
    QAction *actionUPLS3D_ttt_Score_Plot;
    QAction *actionUPLS3D_ppp_Loadings_Plot;
    QAction *actionUPLS3D_www_Weights_Plot;
    QAction *actionPLS_Validator;
    QAction *actionUPLS_Validator;
    QAction *actionPLS_Prediction;
    QAction *actionUPLS_Prediction;
    QAction *actionPCA_Prediction;
    QAction *actionUPCA_Prediction;
    QAction *actionPLS2D_uu_Score_Plot;
    QAction *actionPLS2D_qq_Loadings_Plot;
    QAction *actionPLS3D_uuu_Score_Plot;
    QAction *actionPLS3D_qqq_Loadings_Plot;
    QAction *actionUPLS2D_uu_Score_Plot;
    QAction *actionUPLS2D_qq_Loadings_Plot;
    QAction *actionUPLS3D_uuu_Score_Plot;
    QAction *actionUPLS3D_qqq_Loadings_Plot;
    QAction *action_Test;
    QAction *actionPCA2DScore_Plot_Prediction;
    QAction *actionPCA3DScore_Plot_Prediction;
    QAction *actionUPCA2DScore_Plot_Prediction;
    QAction *actionUPCA3DScore_Plot_Prediction;
    QAction *actionPLS2DScore_Plot_Prediction;
    QAction *actionPLSRecalc_vs_Exp;
    QAction *actionPLS3D_ttt_Score_Plot_Prediction;
    QAction *actionCascade_SubWindows;
    QAction *actionTile_SubWindows;
    QAction *actionUPLS2DScore_Plot_Prediction;
    QAction *actionUPLS3D_ttt_Score_Plot_Prediction;
    QAction *actionUPLSRecalc_vs_Exp;
    QAction *actionUPLSRecalc_vs_Exp_with_Prediction;
    QAction *actionPLSRecalc_vs_Exp_with_Prediction;
    QAction *actionVariableDistribution;
    QAction *actionVariable_vs_Variable;
    QAction *actionAdd_Remove_Object_Labels;
    QAction *actionExtract_Data_Objects_and_Variables;
    QAction *action2DSpace_Clusters;
    QAction *action3DSpace_Clusters;
    QAction *actionClustering;
    QAction *actionPLSVariableSelection;
    QAction *actionUPLSVariableSelection;
    QAction *actionVarSel_R2Q2_Plot;
    QAction *actionVarSel_Ftest_Nvar_Plot;
    QAction *actionVarSel_Ftest_Q2_Plot;
    QAction *actionModIncVar_Variables_Plot;
    QAction *actionViewer_Window;
    QAction *actionShow_Object_Labels;
    QAction *actionShow_Variable_Labels;
    QAction *actionPLSR2_Prediction;
    QAction *actionUPLSR2_Prediction;
    QAction *actionPLSRecalc_Residuals_vs_Exp;
    QAction *actionPLSPred_Residuals_vs_Exp;
    QAction *actionUPLSRecal_Residuals_vs_Exp;
    QAction *actionUPLSPred_Residuals_vs_Exp;
    QAction *actionMLR;
    QAction *actionMLR_Validator;
    QAction *actionMLR_Prediction;
    QAction *actionMLR_Recalc_vs_Exp;
    QAction *actionMLR_Recalc_Residuals_vs_Exp;
    QAction *actionMLR_Predict_vs_Exp;
    QAction *actionMLR_Predict_Residuals_vs_Exp;
    QAction *actionMLR_R2_and_Q2;
    QAction *actionMLR_Recal_vs_Exp_and_Prediction;
    QAction *actionMLR_R2_Prediction;
    QAction *actionPLSPred_vs_Exp_with_Prediction;
    QAction *actionUPLSPred_vs_Exp_with_Prediction;
    QAction *action_1;
    QAction *action_2;
    QAction *action_3;
    QAction *action_4;
    QAction *actionMLR_Predict_vs_Exp_and_Prediction;
    QAction *actionLDA;
    QAction *actionLDA_Validator;
    QAction *actionLDA_Prediction;
    QAction *action2D_Feature_Plot;
    QAction *action3D_Feature_Plot;
    QAction *actionProbability_Distribution_Plot;
    QAction *action2D_Feature_Plot_and_Predictions;
    QAction *action3D_Feature_Plot_and_Predictions;
    QAction *actionProbability_Distribution_Plot_and_Predictions;
    QAction *actionPCA2DLoadingsMVAND_Plot;
    QAction *actionManual;
    QAction *actionAdvanced_Pretreatment;
    QAction *actionMerge_Data;
    QAction *actionQ2_Scrambled;
    QAction *actionPLSYScrambling;
    QAction *actionSDEP_Scrambled;
    QAction *actionSDEC_Scrambled;
    QAction *actionMLR_Y_Scrambling_Plot;
    QAction *actionPLSQ2_Sample_Validator;
    QAction *actionPLSSDEP_Sample_Validator_Plot;
    QAction *actionPLS3D_Q2_Dynamic_Sample_Validator_Plot;
    QAction *actionPLS3D_SDEP_Dynamic_Sample_Validator_Plot;
    QAction *actionPLSBeta_Coefficients;
    QAction *actionMLR_Beta_Coefficients;
    QAction *actionPreferences;
    QAction *actionBetaCoeffDWPlot;
    QAction *actionPLS_DA;
    QAction *actionPLS_DA_Validator;
    QAction *actionPLS_DA_Prediction;
    QAction *actionPLS2D_p_q_p_q_Loadings_Plot;
    QAction *actionOpenProject_OLD_VERSION;
    QAction *actionEPLS_Regression;
    QAction *actionPLS_Discriminant_Analysis;
    QAction *actionEPLS_Discriminant_Analysis;
    QAction *actionEPLS_Validator;
    QAction *actionEPLS_Prediction;
    QAction *actionEPLSRecalculated_vs_Experimental;
    QAction *actionEPLSPredicted_vs_Experimental;
    QAction *actionEPLSR2_and_Q2;
    QAction *actionAUC_recalculated_and_AUC_predicted;
    QAction *actionEPLSROC_AUC_recalculated_predicted;
    QAction *actionEPLSPrecision_Recall_AUC_recalculated_predicted;
    QAction *actionPLSROC_AUC_recalculated_predicted;
    QAction *actionPLSPrecision_Recall_AUC_recalculated_predicted;
    QAction *actionROC_AUC_recalculated_and_external_prediction;
    QAction *actionPrecision_recall_AUC_recalculated_predicted;
    QAction *actionPLSROC_Curve;
    QAction *actionPLSPrecision_recall_Curve;
    QAction *actionEPLSROC_curves;
    QAction *actionEPLSPrecision_recall_curves;
    QAction *actionLDAROC_Curve;
    QAction *actionLDAPrecision_Recall_Curve;
    QAction *actionPCA2DExpVarPlot;
    QAction *actionPLSRMSE;
    QAction *actionPLSMAE;
    QAction *actionMeans_squared_error_Training_Validation_Ext_prediction;
    QAction *actionMean_squared_error_External_prediction;
    QAction *actionMean_absolute_error_External_prediction;
    QAction *actionPLSRMSEModel_and_External_Prediction;
    QAction *actionPLSMAEModel_and_External_Prediction;
    QWidget *centralwidget;
    QGridLayout *gridLayout_4;
    QMdiArea *mdiArea;
    QSpacerItem *horizontalSpacer_5;
    QFrame *progressframe;
    QGridLayout *gridLayout_2;
    QProgressBar *progressBar;
    QPushButton *abortButton;
    QMenuBar *menubar;
    QMenu *menuFile;
    QMenu *menuOpen_Recents;
    QMenu *menuModels;
    QMenu *menuGraphs;
    QMenu *menuVariable;
    QMenu *menuPlot_MLR;
    QMenu *menuPlot_PLS_Model;
    QMenu *menu3D_Space_3;
    QMenu *menu2D_Space_3;
    QMenu *menuPlot_LDA;
    QMenu *menuPlot_PCA_Model;
    QMenu *menu3D_Space;
    QMenu *menu2D_Space;
    QMenu *menuEPLS_plots;
    QMenu *menuData;
    QMenu *menuHelp;
    QMenu *menuWindow;
    QMenu *menuExtensions;
    QStatusBar *statusbar;
    QDockWidget *dockWidget;
    QWidget *dockWidgetContents;
    QGridLayout *gridLayout_8;
    QGridLayout *gridLayout_6;
    QGridLayout *gridLayout;
    QSpacerItem *horizontalSpacer_2;
    QSpacerItem *horizontalSpacer;
    QPushButton *addProject;
    QPushButton *removeProject;
    QTreeWidget *treeWidget;
    QDockWidget *dockWidget_2;
    QWidget *dockWidgetContents_2;
    QGridLayout *gridLayout_3;
    QTextEdit *log;
    QDockWidget *dockWidget_3;
    QWidget *dockWidgetContents_4;
    QGridLayout *gridLayout_5;
    QTabWidget *tabWidget;
    QWidget *tab_1;

    void setupUi(QMainWindow *MainWindow)
    {
        if (MainWindow->objectName().isEmpty())
            MainWindow->setObjectName(QString::fromUtf8("MainWindow"));
        MainWindow->resize(916, 738);
        QIcon icon;
        icon.addFile(QString::fromUtf8(":/qsmwindlogo.png"), QSize(), QIcon::Normal, QIcon::Off);
        MainWindow->setWindowIcon(icon);
        MainWindow->setDockNestingEnabled(false);
        actionOpenProject = new QAction(MainWindow);
        actionOpenProject->setObjectName(QString::fromUtf8("actionOpenProject"));
        QIcon icon1;
        icon1.addFile(QString::fromUtf8(":/openproject.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionOpenProject->setIcon(icon1);
        actionQuit = new QAction(MainWindow);
        actionQuit->setObjectName(QString::fromUtf8("actionQuit"));
        QIcon icon2;
        icon2.addFile(QString::fromUtf8(":/quit.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionQuit->setIcon(icon2);
        actionPCA = new QAction(MainWindow);
        actionPCA->setObjectName(QString::fromUtf8("actionPCA"));
        QIcon icon3;
        icon3.addFile(QString::fromUtf8(":/scatter.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionPCA->setIcon(icon3);
        actionPLS_Regression = new QAction(MainWindow);
        actionPLS_Regression->setObjectName(QString::fromUtf8("actionPLS_Regression"));
        QIcon icon4;
        icon4.addFile(QString::fromUtf8(":/regression.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionPLS_Regression->setIcon(icon4);
        actionAbout = new QAction(MainWindow);
        actionAbout->setObjectName(QString::fromUtf8("actionAbout"));
        actionAdd_Remove_Variable_Labels = new QAction(MainWindow);
        actionAdd_Remove_Variable_Labels->setObjectName(QString::fromUtf8("actionAdd_Remove_Variable_Labels"));
        QIcon icon5;
        icon5.addFile(QString::fromUtf8(":/label.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionAdd_Remove_Variable_Labels->setIcon(icon5);
        actionSaveAs = new QAction(MainWindow);
        actionSaveAs->setObjectName(QString::fromUtf8("actionSaveAs"));
        QIcon icon6;
        icon6.addFile(QString::fromUtf8(":/saveproject.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionSaveAs->setIcon(icon6);
        actionExport = new QAction(MainWindow);
        actionExport->setObjectName(QString::fromUtf8("actionExport"));
        actionUPLS = new QAction(MainWindow);
        actionUPLS->setObjectName(QString::fromUtf8("actionUPLS"));
        actionLog_Window = new QAction(MainWindow);
        actionLog_Window->setObjectName(QString::fromUtf8("actionLog_Window"));
        actionLog_Window->setCheckable(true);
        actionLog_Window->setChecked(true);
        actionProject_Window = new QAction(MainWindow);
        actionProject_Window->setObjectName(QString::fromUtf8("actionProject_Window"));
        actionProject_Window->setCheckable(true);
        actionProject_Window->setChecked(true);
        actionUPCA = new QAction(MainWindow);
        actionUPCA->setObjectName(QString::fromUtf8("actionUPCA"));
        actionNewProject = new QAction(MainWindow);
        actionNewProject->setObjectName(QString::fromUtf8("actionNewProject"));
        QIcon icon7;
        icon7.addFile(QString::fromUtf8(":/newproject.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionNewProject->setIcon(icon7);
        actionTest = new QAction(MainWindow);
        actionTest->setObjectName(QString::fromUtf8("actionTest"));
        actionPCA2DScore_Plot = new QAction(MainWindow);
        actionPCA2DScore_Plot->setObjectName(QString::fromUtf8("actionPCA2DScore_Plot"));
        actionPCA2DLoadings_Plot = new QAction(MainWindow);
        actionPCA2DLoadings_Plot->setObjectName(QString::fromUtf8("actionPCA2DLoadings_Plot"));
        actionPCA3DScore_Plot = new QAction(MainWindow);
        actionPCA3DScore_Plot->setObjectName(QString::fromUtf8("actionPCA3DScore_Plot"));
        actionPCA3DLoadings_Plot = new QAction(MainWindow);
        actionPCA3DLoadings_Plot->setObjectName(QString::fromUtf8("actionPCA3DLoadings_Plot"));
        actionUPCA2DScore_Plot = new QAction(MainWindow);
        actionUPCA2DScore_Plot->setObjectName(QString::fromUtf8("actionUPCA2DScore_Plot"));
        actionUPCA2DLoadings_Plot = new QAction(MainWindow);
        actionUPCA2DLoadings_Plot->setObjectName(QString::fromUtf8("actionUPCA2DLoadings_Plot"));
        actionUPCA3DScore_Plot = new QAction(MainWindow);
        actionUPCA3DScore_Plot->setObjectName(QString::fromUtf8("actionUPCA3DScore_Plot"));
        actionUPCA3DLoadings_Plot = new QAction(MainWindow);
        actionUPCA3DLoadings_Plot->setObjectName(QString::fromUtf8("actionUPCA3DLoadings_Plot"));
        actionPLS_Plot = new QAction(MainWindow);
        actionPLS_Plot->setObjectName(QString::fromUtf8("actionPLS_Plot"));
        actionPLS2D_tt_Score_Plot = new QAction(MainWindow);
        actionPLS2D_tt_Score_Plot->setObjectName(QString::fromUtf8("actionPLS2D_tt_Score_Plot"));
        actionPLS2D_pp_Loadings_Plot = new QAction(MainWindow);
        actionPLS2D_pp_Loadings_Plot->setObjectName(QString::fromUtf8("actionPLS2D_pp_Loadings_Plot"));
        actionPLS2D_ww_Weights_Plot = new QAction(MainWindow);
        actionPLS2D_ww_Weights_Plot->setObjectName(QString::fromUtf8("actionPLS2D_ww_Weights_Plot"));
        actionPLSPred_vs_Exp = new QAction(MainWindow);
        actionPLSPred_vs_Exp->setObjectName(QString::fromUtf8("actionPLSPred_vs_Exp"));
        actionPLSR2_Q2 = new QAction(MainWindow);
        actionPLSR2_Q2->setObjectName(QString::fromUtf8("actionPLSR2_Q2"));
        actionPLS3D_ttt_Score_Plot = new QAction(MainWindow);
        actionPLS3D_ttt_Score_Plot->setObjectName(QString::fromUtf8("actionPLS3D_ttt_Score_Plot"));
        actionPLS3D_ppp_Loadings_Plot = new QAction(MainWindow);
        actionPLS3D_ppp_Loadings_Plot->setObjectName(QString::fromUtf8("actionPLS3D_ppp_Loadings_Plot"));
        actionPLS3D_www_Weights_Plot = new QAction(MainWindow);
        actionPLS3D_www_Weights_Plot->setObjectName(QString::fromUtf8("actionPLS3D_www_Weights_Plot"));
        actionUPLS_Plot = new QAction(MainWindow);
        actionUPLS_Plot->setObjectName(QString::fromUtf8("actionUPLS_Plot"));
        actionUPLS2D_tt_Score_Plot = new QAction(MainWindow);
        actionUPLS2D_tt_Score_Plot->setObjectName(QString::fromUtf8("actionUPLS2D_tt_Score_Plot"));
        actionUPLS2D_pp_Loadings_Plot = new QAction(MainWindow);
        actionUPLS2D_pp_Loadings_Plot->setObjectName(QString::fromUtf8("actionUPLS2D_pp_Loadings_Plot"));
        actionUPLS2D_ww_Weights_Plot = new QAction(MainWindow);
        actionUPLS2D_ww_Weights_Plot->setObjectName(QString::fromUtf8("actionUPLS2D_ww_Weights_Plot"));
        actionUPLSPred_vs_Exp = new QAction(MainWindow);
        actionUPLSPred_vs_Exp->setObjectName(QString::fromUtf8("actionUPLSPred_vs_Exp"));
        actionUPLSR2_Q2 = new QAction(MainWindow);
        actionUPLSR2_Q2->setObjectName(QString::fromUtf8("actionUPLSR2_Q2"));
        actionUPLS3D_ttt_Score_Plot = new QAction(MainWindow);
        actionUPLS3D_ttt_Score_Plot->setObjectName(QString::fromUtf8("actionUPLS3D_ttt_Score_Plot"));
        actionUPLS3D_ppp_Loadings_Plot = new QAction(MainWindow);
        actionUPLS3D_ppp_Loadings_Plot->setObjectName(QString::fromUtf8("actionUPLS3D_ppp_Loadings_Plot"));
        actionUPLS3D_www_Weights_Plot = new QAction(MainWindow);
        actionUPLS3D_www_Weights_Plot->setObjectName(QString::fromUtf8("actionUPLS3D_www_Weights_Plot"));
        actionPLS_Validator = new QAction(MainWindow);
        actionPLS_Validator->setObjectName(QString::fromUtf8("actionPLS_Validator"));
        QIcon icon8;
        icon8.addFile(QString::fromUtf8(":/validation.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionPLS_Validator->setIcon(icon8);
        actionUPLS_Validator = new QAction(MainWindow);
        actionUPLS_Validator->setObjectName(QString::fromUtf8("actionUPLS_Validator"));
        actionPLS_Prediction = new QAction(MainWindow);
        actionPLS_Prediction->setObjectName(QString::fromUtf8("actionPLS_Prediction"));
        QIcon icon9;
        icon9.addFile(QString::fromUtf8(":/prediction.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionPLS_Prediction->setIcon(icon9);
        actionUPLS_Prediction = new QAction(MainWindow);
        actionUPLS_Prediction->setObjectName(QString::fromUtf8("actionUPLS_Prediction"));
        actionPCA_Prediction = new QAction(MainWindow);
        actionPCA_Prediction->setObjectName(QString::fromUtf8("actionPCA_Prediction"));
        actionPCA_Prediction->setIcon(icon9);
        actionUPCA_Prediction = new QAction(MainWindow);
        actionUPCA_Prediction->setObjectName(QString::fromUtf8("actionUPCA_Prediction"));
        actionPLS2D_uu_Score_Plot = new QAction(MainWindow);
        actionPLS2D_uu_Score_Plot->setObjectName(QString::fromUtf8("actionPLS2D_uu_Score_Plot"));
        actionPLS2D_qq_Loadings_Plot = new QAction(MainWindow);
        actionPLS2D_qq_Loadings_Plot->setObjectName(QString::fromUtf8("actionPLS2D_qq_Loadings_Plot"));
        actionPLS3D_uuu_Score_Plot = new QAction(MainWindow);
        actionPLS3D_uuu_Score_Plot->setObjectName(QString::fromUtf8("actionPLS3D_uuu_Score_Plot"));
        actionPLS3D_qqq_Loadings_Plot = new QAction(MainWindow);
        actionPLS3D_qqq_Loadings_Plot->setObjectName(QString::fromUtf8("actionPLS3D_qqq_Loadings_Plot"));
        actionUPLS2D_uu_Score_Plot = new QAction(MainWindow);
        actionUPLS2D_uu_Score_Plot->setObjectName(QString::fromUtf8("actionUPLS2D_uu_Score_Plot"));
        actionUPLS2D_qq_Loadings_Plot = new QAction(MainWindow);
        actionUPLS2D_qq_Loadings_Plot->setObjectName(QString::fromUtf8("actionUPLS2D_qq_Loadings_Plot"));
        actionUPLS3D_uuu_Score_Plot = new QAction(MainWindow);
        actionUPLS3D_uuu_Score_Plot->setObjectName(QString::fromUtf8("actionUPLS3D_uuu_Score_Plot"));
        actionUPLS3D_qqq_Loadings_Plot = new QAction(MainWindow);
        actionUPLS3D_qqq_Loadings_Plot->setObjectName(QString::fromUtf8("actionUPLS3D_qqq_Loadings_Plot"));
        action_Test = new QAction(MainWindow);
        action_Test->setObjectName(QString::fromUtf8("action_Test"));
        actionPCA2DScore_Plot_Prediction = new QAction(MainWindow);
        actionPCA2DScore_Plot_Prediction->setObjectName(QString::fromUtf8("actionPCA2DScore_Plot_Prediction"));
        actionPCA3DScore_Plot_Prediction = new QAction(MainWindow);
        actionPCA3DScore_Plot_Prediction->setObjectName(QString::fromUtf8("actionPCA3DScore_Plot_Prediction"));
        actionUPCA2DScore_Plot_Prediction = new QAction(MainWindow);
        actionUPCA2DScore_Plot_Prediction->setObjectName(QString::fromUtf8("actionUPCA2DScore_Plot_Prediction"));
        actionUPCA3DScore_Plot_Prediction = new QAction(MainWindow);
        actionUPCA3DScore_Plot_Prediction->setObjectName(QString::fromUtf8("actionUPCA3DScore_Plot_Prediction"));
        actionPLS2DScore_Plot_Prediction = new QAction(MainWindow);
        actionPLS2DScore_Plot_Prediction->setObjectName(QString::fromUtf8("actionPLS2DScore_Plot_Prediction"));
        actionPLSRecalc_vs_Exp = new QAction(MainWindow);
        actionPLSRecalc_vs_Exp->setObjectName(QString::fromUtf8("actionPLSRecalc_vs_Exp"));
        actionPLS3D_ttt_Score_Plot_Prediction = new QAction(MainWindow);
        actionPLS3D_ttt_Score_Plot_Prediction->setObjectName(QString::fromUtf8("actionPLS3D_ttt_Score_Plot_Prediction"));
        actionCascade_SubWindows = new QAction(MainWindow);
        actionCascade_SubWindows->setObjectName(QString::fromUtf8("actionCascade_SubWindows"));
        actionTile_SubWindows = new QAction(MainWindow);
        actionTile_SubWindows->setObjectName(QString::fromUtf8("actionTile_SubWindows"));
        actionUPLS2DScore_Plot_Prediction = new QAction(MainWindow);
        actionUPLS2DScore_Plot_Prediction->setObjectName(QString::fromUtf8("actionUPLS2DScore_Plot_Prediction"));
        actionUPLS3D_ttt_Score_Plot_Prediction = new QAction(MainWindow);
        actionUPLS3D_ttt_Score_Plot_Prediction->setObjectName(QString::fromUtf8("actionUPLS3D_ttt_Score_Plot_Prediction"));
        actionUPLSRecalc_vs_Exp = new QAction(MainWindow);
        actionUPLSRecalc_vs_Exp->setObjectName(QString::fromUtf8("actionUPLSRecalc_vs_Exp"));
        actionUPLSRecalc_vs_Exp_with_Prediction = new QAction(MainWindow);
        actionUPLSRecalc_vs_Exp_with_Prediction->setObjectName(QString::fromUtf8("actionUPLSRecalc_vs_Exp_with_Prediction"));
        actionPLSRecalc_vs_Exp_with_Prediction = new QAction(MainWindow);
        actionPLSRecalc_vs_Exp_with_Prediction->setObjectName(QString::fromUtf8("actionPLSRecalc_vs_Exp_with_Prediction"));
        actionVariableDistribution = new QAction(MainWindow);
        actionVariableDistribution->setObjectName(QString::fromUtf8("actionVariableDistribution"));
        QIcon icon10;
        icon10.addFile(QString::fromUtf8(":/varplot.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionVariableDistribution->setIcon(icon10);
        actionVariable_vs_Variable = new QAction(MainWindow);
        actionVariable_vs_Variable->setObjectName(QString::fromUtf8("actionVariable_vs_Variable"));
        actionVariable_vs_Variable->setIcon(icon3);
        actionAdd_Remove_Object_Labels = new QAction(MainWindow);
        actionAdd_Remove_Object_Labels->setObjectName(QString::fromUtf8("actionAdd_Remove_Object_Labels"));
        actionAdd_Remove_Object_Labels->setIcon(icon5);
        actionExtract_Data_Objects_and_Variables = new QAction(MainWindow);
        actionExtract_Data_Objects_and_Variables->setObjectName(QString::fromUtf8("actionExtract_Data_Objects_and_Variables"));
        QIcon icon11;
        icon11.addFile(QString::fromUtf8(":/extract.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionExtract_Data_Objects_and_Variables->setIcon(icon11);
        action2DSpace_Clusters = new QAction(MainWindow);
        action2DSpace_Clusters->setObjectName(QString::fromUtf8("action2DSpace_Clusters"));
        action3DSpace_Clusters = new QAction(MainWindow);
        action3DSpace_Clusters->setObjectName(QString::fromUtf8("action3DSpace_Clusters"));
        actionClustering = new QAction(MainWindow);
        actionClustering->setObjectName(QString::fromUtf8("actionClustering"));
        actionPLSVariableSelection = new QAction(MainWindow);
        actionPLSVariableSelection->setObjectName(QString::fromUtf8("actionPLSVariableSelection"));
        QIcon icon12;
        icon12.addFile(QString::fromUtf8(":/pls.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionPLSVariableSelection->setIcon(icon12);
        actionUPLSVariableSelection = new QAction(MainWindow);
        actionUPLSVariableSelection->setObjectName(QString::fromUtf8("actionUPLSVariableSelection"));
        actionVarSel_R2Q2_Plot = new QAction(MainWindow);
        actionVarSel_R2Q2_Plot->setObjectName(QString::fromUtf8("actionVarSel_R2Q2_Plot"));
        actionVarSel_Ftest_Nvar_Plot = new QAction(MainWindow);
        actionVarSel_Ftest_Nvar_Plot->setObjectName(QString::fromUtf8("actionVarSel_Ftest_Nvar_Plot"));
        actionVarSel_Ftest_Q2_Plot = new QAction(MainWindow);
        actionVarSel_Ftest_Q2_Plot->setObjectName(QString::fromUtf8("actionVarSel_Ftest_Q2_Plot"));
        actionModIncVar_Variables_Plot = new QAction(MainWindow);
        actionModIncVar_Variables_Plot->setObjectName(QString::fromUtf8("actionModIncVar_Variables_Plot"));
        actionViewer_Window = new QAction(MainWindow);
        actionViewer_Window->setObjectName(QString::fromUtf8("actionViewer_Window"));
        actionViewer_Window->setCheckable(true);
        actionViewer_Window->setChecked(false);
        actionShow_Object_Labels = new QAction(MainWindow);
        actionShow_Object_Labels->setObjectName(QString::fromUtf8("actionShow_Object_Labels"));
        actionShow_Variable_Labels = new QAction(MainWindow);
        actionShow_Variable_Labels->setObjectName(QString::fromUtf8("actionShow_Variable_Labels"));
        actionPLSR2_Prediction = new QAction(MainWindow);
        actionPLSR2_Prediction->setObjectName(QString::fromUtf8("actionPLSR2_Prediction"));
        actionUPLSR2_Prediction = new QAction(MainWindow);
        actionUPLSR2_Prediction->setObjectName(QString::fromUtf8("actionUPLSR2_Prediction"));
        actionPLSRecalc_Residuals_vs_Exp = new QAction(MainWindow);
        actionPLSRecalc_Residuals_vs_Exp->setObjectName(QString::fromUtf8("actionPLSRecalc_Residuals_vs_Exp"));
        actionPLSPred_Residuals_vs_Exp = new QAction(MainWindow);
        actionPLSPred_Residuals_vs_Exp->setObjectName(QString::fromUtf8("actionPLSPred_Residuals_vs_Exp"));
        actionUPLSRecal_Residuals_vs_Exp = new QAction(MainWindow);
        actionUPLSRecal_Residuals_vs_Exp->setObjectName(QString::fromUtf8("actionUPLSRecal_Residuals_vs_Exp"));
        actionUPLSPred_Residuals_vs_Exp = new QAction(MainWindow);
        actionUPLSPred_Residuals_vs_Exp->setObjectName(QString::fromUtf8("actionUPLSPred_Residuals_vs_Exp"));
        actionMLR = new QAction(MainWindow);
        actionMLR->setObjectName(QString::fromUtf8("actionMLR"));
        actionMLR->setIcon(icon4);
        actionMLR_Validator = new QAction(MainWindow);
        actionMLR_Validator->setObjectName(QString::fromUtf8("actionMLR_Validator"));
        actionMLR_Validator->setIcon(icon8);
        actionMLR_Prediction = new QAction(MainWindow);
        actionMLR_Prediction->setObjectName(QString::fromUtf8("actionMLR_Prediction"));
        actionMLR_Prediction->setIcon(icon9);
        actionMLR_Recalc_vs_Exp = new QAction(MainWindow);
        actionMLR_Recalc_vs_Exp->setObjectName(QString::fromUtf8("actionMLR_Recalc_vs_Exp"));
        actionMLR_Recalc_Residuals_vs_Exp = new QAction(MainWindow);
        actionMLR_Recalc_Residuals_vs_Exp->setObjectName(QString::fromUtf8("actionMLR_Recalc_Residuals_vs_Exp"));
        actionMLR_Predict_vs_Exp = new QAction(MainWindow);
        actionMLR_Predict_vs_Exp->setObjectName(QString::fromUtf8("actionMLR_Predict_vs_Exp"));
        actionMLR_Predict_Residuals_vs_Exp = new QAction(MainWindow);
        actionMLR_Predict_Residuals_vs_Exp->setObjectName(QString::fromUtf8("actionMLR_Predict_Residuals_vs_Exp"));
        actionMLR_R2_and_Q2 = new QAction(MainWindow);
        actionMLR_R2_and_Q2->setObjectName(QString::fromUtf8("actionMLR_R2_and_Q2"));
        actionMLR_Recal_vs_Exp_and_Prediction = new QAction(MainWindow);
        actionMLR_Recal_vs_Exp_and_Prediction->setObjectName(QString::fromUtf8("actionMLR_Recal_vs_Exp_and_Prediction"));
        actionMLR_R2_Prediction = new QAction(MainWindow);
        actionMLR_R2_Prediction->setObjectName(QString::fromUtf8("actionMLR_R2_Prediction"));
        actionPLSPred_vs_Exp_with_Prediction = new QAction(MainWindow);
        actionPLSPred_vs_Exp_with_Prediction->setObjectName(QString::fromUtf8("actionPLSPred_vs_Exp_with_Prediction"));
        actionUPLSPred_vs_Exp_with_Prediction = new QAction(MainWindow);
        actionUPLSPred_vs_Exp_with_Prediction->setObjectName(QString::fromUtf8("actionUPLSPred_vs_Exp_with_Prediction"));
        action_1 = new QAction(MainWindow);
        action_1->setObjectName(QString::fromUtf8("action_1"));
        action_2 = new QAction(MainWindow);
        action_2->setObjectName(QString::fromUtf8("action_2"));
        action_3 = new QAction(MainWindow);
        action_3->setObjectName(QString::fromUtf8("action_3"));
        action_4 = new QAction(MainWindow);
        action_4->setObjectName(QString::fromUtf8("action_4"));
        actionMLR_Predict_vs_Exp_and_Prediction = new QAction(MainWindow);
        actionMLR_Predict_vs_Exp_and_Prediction->setObjectName(QString::fromUtf8("actionMLR_Predict_vs_Exp_and_Prediction"));
        actionLDA = new QAction(MainWindow);
        actionLDA->setObjectName(QString::fromUtf8("actionLDA"));
        QIcon icon13;
        icon13.addFile(QString::fromUtf8(":/discriminant_analysis.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionLDA->setIcon(icon13);
        actionLDA_Validator = new QAction(MainWindow);
        actionLDA_Validator->setObjectName(QString::fromUtf8("actionLDA_Validator"));
        actionLDA_Validator->setIcon(icon8);
        actionLDA_Prediction = new QAction(MainWindow);
        actionLDA_Prediction->setObjectName(QString::fromUtf8("actionLDA_Prediction"));
        actionLDA_Prediction->setIcon(icon9);
        action2D_Feature_Plot = new QAction(MainWindow);
        action2D_Feature_Plot->setObjectName(QString::fromUtf8("action2D_Feature_Plot"));
        action3D_Feature_Plot = new QAction(MainWindow);
        action3D_Feature_Plot->setObjectName(QString::fromUtf8("action3D_Feature_Plot"));
        actionProbability_Distribution_Plot = new QAction(MainWindow);
        actionProbability_Distribution_Plot->setObjectName(QString::fromUtf8("actionProbability_Distribution_Plot"));
        action2D_Feature_Plot_and_Predictions = new QAction(MainWindow);
        action2D_Feature_Plot_and_Predictions->setObjectName(QString::fromUtf8("action2D_Feature_Plot_and_Predictions"));
        action3D_Feature_Plot_and_Predictions = new QAction(MainWindow);
        action3D_Feature_Plot_and_Predictions->setObjectName(QString::fromUtf8("action3D_Feature_Plot_and_Predictions"));
        actionProbability_Distribution_Plot_and_Predictions = new QAction(MainWindow);
        actionProbability_Distribution_Plot_and_Predictions->setObjectName(QString::fromUtf8("actionProbability_Distribution_Plot_and_Predictions"));
        actionPCA2DLoadingsMVAND_Plot = new QAction(MainWindow);
        actionPCA2DLoadingsMVAND_Plot->setObjectName(QString::fromUtf8("actionPCA2DLoadingsMVAND_Plot"));
        actionManual = new QAction(MainWindow);
        actionManual->setObjectName(QString::fromUtf8("actionManual"));
        actionAdvanced_Pretreatment = new QAction(MainWindow);
        actionAdvanced_Pretreatment->setObjectName(QString::fromUtf8("actionAdvanced_Pretreatment"));
        QIcon icon14;
        icon14.addFile(QString::fromUtf8(":/advanced_datapretreatment.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionAdvanced_Pretreatment->setIcon(icon14);
        actionMerge_Data = new QAction(MainWindow);
        actionMerge_Data->setObjectName(QString::fromUtf8("actionMerge_Data"));
        QIcon icon15;
        icon15.addFile(QString::fromUtf8(":/merge.png"), QSize(), QIcon::Normal, QIcon::Off);
        actionMerge_Data->setIcon(icon15);
        actionQ2_Scrambled = new QAction(MainWindow);
        actionQ2_Scrambled->setObjectName(QString::fromUtf8("actionQ2_Scrambled"));
        actionPLSYScrambling = new QAction(MainWindow);
        actionPLSYScrambling->setObjectName(QString::fromUtf8("actionPLSYScrambling"));
        actionSDEP_Scrambled = new QAction(MainWindow);
        actionSDEP_Scrambled->setObjectName(QString::fromUtf8("actionSDEP_Scrambled"));
        actionSDEC_Scrambled = new QAction(MainWindow);
        actionSDEC_Scrambled->setObjectName(QString::fromUtf8("actionSDEC_Scrambled"));
        actionMLR_Y_Scrambling_Plot = new QAction(MainWindow);
        actionMLR_Y_Scrambling_Plot->setObjectName(QString::fromUtf8("actionMLR_Y_Scrambling_Plot"));
        actionPLSQ2_Sample_Validator = new QAction(MainWindow);
        actionPLSQ2_Sample_Validator->setObjectName(QString::fromUtf8("actionPLSQ2_Sample_Validator"));
        actionPLSSDEP_Sample_Validator_Plot = new QAction(MainWindow);
        actionPLSSDEP_Sample_Validator_Plot->setObjectName(QString::fromUtf8("actionPLSSDEP_Sample_Validator_Plot"));
        actionPLS3D_Q2_Dynamic_Sample_Validator_Plot = new QAction(MainWindow);
        actionPLS3D_Q2_Dynamic_Sample_Validator_Plot->setObjectName(QString::fromUtf8("actionPLS3D_Q2_Dynamic_Sample_Validator_Plot"));
        actionPLS3D_SDEP_Dynamic_Sample_Validator_Plot = new QAction(MainWindow);
        actionPLS3D_SDEP_Dynamic_Sample_Validator_Plot->setObjectName(QString::fromUtf8("actionPLS3D_SDEP_Dynamic_Sample_Validator_Plot"));
        actionPLSBeta_Coefficients = new QAction(MainWindow);
        actionPLSBeta_Coefficients->setObjectName(QString::fromUtf8("actionPLSBeta_Coefficients"));
        actionMLR_Beta_Coefficients = new QAction(MainWindow);
        actionMLR_Beta_Coefficients->setObjectName(QString::fromUtf8("actionMLR_Beta_Coefficients"));
        actionPreferences = new QAction(MainWindow);
        actionPreferences->setObjectName(QString::fromUtf8("actionPreferences"));
        actionBetaCoeffDWPlot = new QAction(MainWindow);
        actionBetaCoeffDWPlot->setObjectName(QString::fromUtf8("actionBetaCoeffDWPlot"));
        actionPLS_DA = new QAction(MainWindow);
        actionPLS_DA->setObjectName(QString::fromUtf8("actionPLS_DA"));
        actionPLS_DA_Validator = new QAction(MainWindow);
        actionPLS_DA_Validator->setObjectName(QString::fromUtf8("actionPLS_DA_Validator"));
        actionPLS_DA_Prediction = new QAction(MainWindow);
        actionPLS_DA_Prediction->setObjectName(QString::fromUtf8("actionPLS_DA_Prediction"));
        actionPLS2D_p_q_p_q_Loadings_Plot = new QAction(MainWindow);
        actionPLS2D_p_q_p_q_Loadings_Plot->setObjectName(QString::fromUtf8("actionPLS2D_p_q_p_q_Loadings_Plot"));
        actionOpenProject_OLD_VERSION = new QAction(MainWindow);
        actionOpenProject_OLD_VERSION->setObjectName(QString::fromUtf8("actionOpenProject_OLD_VERSION"));
        actionEPLS_Regression = new QAction(MainWindow);
        actionEPLS_Regression->setObjectName(QString::fromUtf8("actionEPLS_Regression"));
        actionEPLS_Regression->setIcon(icon4);
        actionPLS_Discriminant_Analysis = new QAction(MainWindow);
        actionPLS_Discriminant_Analysis->setObjectName(QString::fromUtf8("actionPLS_Discriminant_Analysis"));
        actionPLS_Discriminant_Analysis->setIcon(icon13);
        actionEPLS_Discriminant_Analysis = new QAction(MainWindow);
        actionEPLS_Discriminant_Analysis->setObjectName(QString::fromUtf8("actionEPLS_Discriminant_Analysis"));
        actionEPLS_Discriminant_Analysis->setIcon(icon13);
        actionEPLS_Validator = new QAction(MainWindow);
        actionEPLS_Validator->setObjectName(QString::fromUtf8("actionEPLS_Validator"));
        actionEPLS_Validator->setIcon(icon8);
        actionEPLS_Prediction = new QAction(MainWindow);
        actionEPLS_Prediction->setObjectName(QString::fromUtf8("actionEPLS_Prediction"));
        actionEPLS_Prediction->setIcon(icon9);
        actionEPLSRecalculated_vs_Experimental = new QAction(MainWindow);
        actionEPLSRecalculated_vs_Experimental->setObjectName(QString::fromUtf8("actionEPLSRecalculated_vs_Experimental"));
        actionEPLSPredicted_vs_Experimental = new QAction(MainWindow);
        actionEPLSPredicted_vs_Experimental->setObjectName(QString::fromUtf8("actionEPLSPredicted_vs_Experimental"));
        actionEPLSR2_and_Q2 = new QAction(MainWindow);
        actionEPLSR2_and_Q2->setObjectName(QString::fromUtf8("actionEPLSR2_and_Q2"));
        actionAUC_recalculated_and_AUC_predicted = new QAction(MainWindow);
        actionAUC_recalculated_and_AUC_predicted->setObjectName(QString::fromUtf8("actionAUC_recalculated_and_AUC_predicted"));
        actionEPLSROC_AUC_recalculated_predicted = new QAction(MainWindow);
        actionEPLSROC_AUC_recalculated_predicted->setObjectName(QString::fromUtf8("actionEPLSROC_AUC_recalculated_predicted"));
        actionEPLSPrecision_Recall_AUC_recalculated_predicted = new QAction(MainWindow);
        actionEPLSPrecision_Recall_AUC_recalculated_predicted->setObjectName(QString::fromUtf8("actionEPLSPrecision_Recall_AUC_recalculated_predicted"));
        actionPLSROC_AUC_recalculated_predicted = new QAction(MainWindow);
        actionPLSROC_AUC_recalculated_predicted->setObjectName(QString::fromUtf8("actionPLSROC_AUC_recalculated_predicted"));
        actionPLSPrecision_Recall_AUC_recalculated_predicted = new QAction(MainWindow);
        actionPLSPrecision_Recall_AUC_recalculated_predicted->setObjectName(QString::fromUtf8("actionPLSPrecision_Recall_AUC_recalculated_predicted"));
        actionROC_AUC_recalculated_and_external_prediction = new QAction(MainWindow);
        actionROC_AUC_recalculated_and_external_prediction->setObjectName(QString::fromUtf8("actionROC_AUC_recalculated_and_external_prediction"));
        actionPrecision_recall_AUC_recalculated_predicted = new QAction(MainWindow);
        actionPrecision_recall_AUC_recalculated_predicted->setObjectName(QString::fromUtf8("actionPrecision_recall_AUC_recalculated_predicted"));
        actionPLSROC_Curve = new QAction(MainWindow);
        actionPLSROC_Curve->setObjectName(QString::fromUtf8("actionPLSROC_Curve"));
        actionPLSPrecision_recall_Curve = new QAction(MainWindow);
        actionPLSPrecision_recall_Curve->setObjectName(QString::fromUtf8("actionPLSPrecision_recall_Curve"));
        actionEPLSROC_curves = new QAction(MainWindow);
        actionEPLSROC_curves->setObjectName(QString::fromUtf8("actionEPLSROC_curves"));
        actionEPLSPrecision_recall_curves = new QAction(MainWindow);
        actionEPLSPrecision_recall_curves->setObjectName(QString::fromUtf8("actionEPLSPrecision_recall_curves"));
        actionLDAROC_Curve = new QAction(MainWindow);
        actionLDAROC_Curve->setObjectName(QString::fromUtf8("actionLDAROC_Curve"));
        actionLDAPrecision_Recall_Curve = new QAction(MainWindow);
        actionLDAPrecision_Recall_Curve->setObjectName(QString::fromUtf8("actionLDAPrecision_Recall_Curve"));
        actionPCA2DExpVarPlot = new QAction(MainWindow);
        actionPCA2DExpVarPlot->setObjectName(QString::fromUtf8("actionPCA2DExpVarPlot"));
        actionPLSRMSE = new QAction(MainWindow);
        actionPLSRMSE->setObjectName(QString::fromUtf8("actionPLSRMSE"));
        actionPLSMAE = new QAction(MainWindow);
        actionPLSMAE->setObjectName(QString::fromUtf8("actionPLSMAE"));
        actionMeans_squared_error_Training_Validation_Ext_prediction = new QAction(MainWindow);
        actionMeans_squared_error_Training_Validation_Ext_prediction->setObjectName(QString::fromUtf8("actionMeans_squared_error_Training_Validation_Ext_prediction"));
        actionMean_squared_error_External_prediction = new QAction(MainWindow);
        actionMean_squared_error_External_prediction->setObjectName(QString::fromUtf8("actionMean_squared_error_External_prediction"));
        actionMean_absolute_error_External_prediction = new QAction(MainWindow);
        actionMean_absolute_error_External_prediction->setObjectName(QString::fromUtf8("actionMean_absolute_error_External_prediction"));
        actionPLSRMSEModel_and_External_Prediction = new QAction(MainWindow);
        actionPLSRMSEModel_and_External_Prediction->setObjectName(QString::fromUtf8("actionPLSRMSEModel_and_External_Prediction"));
        actionPLSMAEModel_and_External_Prediction = new QAction(MainWindow);
        actionPLSMAEModel_and_External_Prediction->setObjectName(QString::fromUtf8("actionPLSMAEModel_and_External_Prediction"));
        centralwidget = new QWidget(MainWindow);
        centralwidget->setObjectName(QString::fromUtf8("centralwidget"));
        gridLayout_4 = new QGridLayout(centralwidget);
        gridLayout_4->setObjectName(QString::fromUtf8("gridLayout_4"));
        mdiArea = new QMdiArea(centralwidget);
        mdiArea->setObjectName(QString::fromUtf8("mdiArea"));
        mdiArea->setMinimumSize(QSize(600, 400));
        mdiArea->setVerticalScrollBarPolicy(Qt::ScrollBarAsNeeded);
        mdiArea->setHorizontalScrollBarPolicy(Qt::ScrollBarAsNeeded);
        mdiArea->setViewMode(QMdiArea::SubWindowView);
        mdiArea->setDocumentMode(false);

        gridLayout_4->addWidget(mdiArea, 0, 0, 1, 2);

        horizontalSpacer_5 = new QSpacerItem(493, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        gridLayout_4->addItem(horizontalSpacer_5, 1, 0, 1, 1);

        progressframe = new QFrame(centralwidget);
        progressframe->setObjectName(QString::fromUtf8("progressframe"));
        progressframe->setMinimumSize(QSize(207, 38));
        progressframe->setMaximumSize(QSize(207, 38));
        progressframe->setFrameShape(QFrame::StyledPanel);
        progressframe->setFrameShadow(QFrame::Raised);
        gridLayout_2 = new QGridLayout(progressframe);
        gridLayout_2->setObjectName(QString::fromUtf8("gridLayout_2"));
        progressBar = new QProgressBar(progressframe);
        progressBar->setObjectName(QString::fromUtf8("progressBar"));
        progressBar->setMinimumSize(QSize(100, 22));
        progressBar->setMaximumSize(QSize(100, 22));
        progressBar->setValue(24);

        gridLayout_2->addWidget(progressBar, 0, 0, 1, 1);

        abortButton = new QPushButton(progressframe);
        abortButton->setObjectName(QString::fromUtf8("abortButton"));
        abortButton->setMinimumSize(QSize(74, 21));
        abortButton->setMaximumSize(QSize(74, 21));

        gridLayout_2->addWidget(abortButton, 0, 1, 1, 1);


        gridLayout_4->addWidget(progressframe, 1, 1, 1, 1);

        MainWindow->setCentralWidget(centralwidget);
        menubar = new QMenuBar(MainWindow);
        menubar->setObjectName(QString::fromUtf8("menubar"));
        menubar->setGeometry(QRect(0, 0, 916, 22));
        menuFile = new QMenu(menubar);
        menuFile->setObjectName(QString::fromUtf8("menuFile"));
        menuOpen_Recents = new QMenu(menuFile);
        menuOpen_Recents->setObjectName(QString::fromUtf8("menuOpen_Recents"));
        QIcon icon16;
        icon16.addFile(QString::fromUtf8(":/openrecents.png"), QSize(), QIcon::Normal, QIcon::Off);
        menuOpen_Recents->setIcon(icon16);
        menuModels = new QMenu(menubar);
        menuModels->setObjectName(QString::fromUtf8("menuModels"));
        menuGraphs = new QMenu(menubar);
        menuGraphs->setObjectName(QString::fromUtf8("menuGraphs"));
        menuVariable = new QMenu(menuGraphs);
        menuVariable->setObjectName(QString::fromUtf8("menuVariable"));
        menuVariable->setIcon(icon10);
        menuPlot_MLR = new QMenu(menuGraphs);
        menuPlot_MLR->setObjectName(QString::fromUtf8("menuPlot_MLR"));
        menuPlot_MLR->setIcon(icon4);
        menuPlot_PLS_Model = new QMenu(menuGraphs);
        menuPlot_PLS_Model->setObjectName(QString::fromUtf8("menuPlot_PLS_Model"));
        menuPlot_PLS_Model->setIcon(icon4);
        menu3D_Space_3 = new QMenu(menuPlot_PLS_Model);
        menu3D_Space_3->setObjectName(QString::fromUtf8("menu3D_Space_3"));
        menu2D_Space_3 = new QMenu(menuPlot_PLS_Model);
        menu2D_Space_3->setObjectName(QString::fromUtf8("menu2D_Space_3"));
        menuPlot_LDA = new QMenu(menuGraphs);
        menuPlot_LDA->setObjectName(QString::fromUtf8("menuPlot_LDA"));
        menuPlot_LDA->setIcon(icon13);
        menuPlot_PCA_Model = new QMenu(menuGraphs);
        menuPlot_PCA_Model->setObjectName(QString::fromUtf8("menuPlot_PCA_Model"));
        menuPlot_PCA_Model->setIcon(icon3);
        menu3D_Space = new QMenu(menuPlot_PCA_Model);
        menu3D_Space->setObjectName(QString::fromUtf8("menu3D_Space"));
        menu2D_Space = new QMenu(menuPlot_PCA_Model);
        menu2D_Space->setObjectName(QString::fromUtf8("menu2D_Space"));
        menuEPLS_plots = new QMenu(menuGraphs);
        menuEPLS_plots->setObjectName(QString::fromUtf8("menuEPLS_plots"));
        menuEPLS_plots->setIcon(icon4);
        menuData = new QMenu(menubar);
        menuData->setObjectName(QString::fromUtf8("menuData"));
        menuHelp = new QMenu(menubar);
        menuHelp->setObjectName(QString::fromUtf8("menuHelp"));
        menuWindow = new QMenu(menubar);
        menuWindow->setObjectName(QString::fromUtf8("menuWindow"));
        menuExtensions = new QMenu(menubar);
        menuExtensions->setObjectName(QString::fromUtf8("menuExtensions"));
        MainWindow->setMenuBar(menubar);
        statusbar = new QStatusBar(MainWindow);
        statusbar->setObjectName(QString::fromUtf8("statusbar"));
        MainWindow->setStatusBar(statusbar);
        dockWidget = new QDockWidget(MainWindow);
        dockWidget->setObjectName(QString::fromUtf8("dockWidget"));
        dockWidget->setMinimumSize(QSize(280, 234));
        dockWidget->setMaximumSize(QSize(524287, 524287));
        dockWidget->setFeatures(QDockWidget::DockWidgetFloatable|QDockWidget::DockWidgetMovable);
        dockWidgetContents = new QWidget();
        dockWidgetContents->setObjectName(QString::fromUtf8("dockWidgetContents"));
        gridLayout_8 = new QGridLayout(dockWidgetContents);
        gridLayout_8->setObjectName(QString::fromUtf8("gridLayout_8"));
        gridLayout_6 = new QGridLayout();
        gridLayout_6->setObjectName(QString::fromUtf8("gridLayout_6"));
        gridLayout = new QGridLayout();
        gridLayout->setObjectName(QString::fromUtf8("gridLayout"));
        horizontalSpacer_2 = new QSpacerItem(36, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        gridLayout->addItem(horizontalSpacer_2, 0, 5, 1, 1);

        horizontalSpacer = new QSpacerItem(36, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        gridLayout->addItem(horizontalSpacer, 0, 0, 1, 1);

        addProject = new QPushButton(dockWidgetContents);
        addProject->setObjectName(QString::fromUtf8("addProject"));
        QSizePolicy sizePolicy(QSizePolicy::MinimumExpanding, QSizePolicy::Expanding);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(addProject->sizePolicy().hasHeightForWidth());
        addProject->setSizePolicy(sizePolicy);
        addProject->setMinimumSize(QSize(74, 28));
        addProject->setMaximumSize(QSize(74, 28));

        gridLayout->addWidget(addProject, 0, 1, 1, 2);

        removeProject = new QPushButton(dockWidgetContents);
        removeProject->setObjectName(QString::fromUtf8("removeProject"));
        removeProject->setMinimumSize(QSize(74, 28));
        removeProject->setMaximumSize(QSize(74, 28));

        gridLayout->addWidget(removeProject, 0, 3, 1, 2);


        gridLayout_6->addLayout(gridLayout, 0, 0, 1, 1);

        treeWidget = new QTreeWidget(dockWidgetContents);
        QTreeWidgetItem *__qtreewidgetitem = new QTreeWidgetItem();
        __qtreewidgetitem->setText(0, QString::fromUtf8("1"));
        treeWidget->setHeaderItem(__qtreewidgetitem);
        treeWidget->setObjectName(QString::fromUtf8("treeWidget"));
        QSizePolicy sizePolicy1(QSizePolicy::Expanding, QSizePolicy::Expanding);
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(treeWidget->sizePolicy().hasHeightForWidth());
        treeWidget->setSizePolicy(sizePolicy1);
        treeWidget->setEditTriggers(QAbstractItemView::DoubleClicked|QAbstractItemView::EditKeyPressed|QAbstractItemView::SelectedClicked);
        treeWidget->setProperty("showDropIndicator", QVariant(true));
        treeWidget->setDragEnabled(false);
        treeWidget->setRootIsDecorated(true);
        treeWidget->header()->setVisible(false);

        gridLayout_6->addWidget(treeWidget, 1, 0, 1, 1);


        gridLayout_8->addLayout(gridLayout_6, 0, 0, 1, 1);

        dockWidget->setWidget(dockWidgetContents);
        MainWindow->addDockWidget(Qt::LeftDockWidgetArea, dockWidget);
        dockWidget_2 = new QDockWidget(MainWindow);
        dockWidget_2->setObjectName(QString::fromUtf8("dockWidget_2"));
        QSizePolicy sizePolicy2(QSizePolicy::Minimum, QSizePolicy::Minimum);
        sizePolicy2.setHorizontalStretch(0);
        sizePolicy2.setVerticalStretch(0);
        sizePolicy2.setHeightForWidth(dockWidget_2->sizePolicy().hasHeightForWidth());
        dockWidget_2->setSizePolicy(sizePolicy2);
        dockWidget_2->setMinimumSize(QSize(113, 138));
        dockWidget_2->setFeatures(QDockWidget::DockWidgetFloatable|QDockWidget::DockWidgetMovable);
        dockWidgetContents_2 = new QWidget();
        dockWidgetContents_2->setObjectName(QString::fromUtf8("dockWidgetContents_2"));
        gridLayout_3 = new QGridLayout(dockWidgetContents_2);
        gridLayout_3->setObjectName(QString::fromUtf8("gridLayout_3"));
        log = new QTextEdit(dockWidgetContents_2);
        log->setObjectName(QString::fromUtf8("log"));
        log->setReadOnly(true);

        gridLayout_3->addWidget(log, 0, 0, 1, 1);

        dockWidget_2->setWidget(dockWidgetContents_2);
        MainWindow->addDockWidget(Qt::LeftDockWidgetArea, dockWidget_2);
        dockWidget_3 = new QDockWidget(MainWindow);
        dockWidget_3->setObjectName(QString::fromUtf8("dockWidget_3"));
        dockWidget_3->setFeatures(QDockWidget::DockWidgetFloatable|QDockWidget::DockWidgetMovable);
        dockWidgetContents_4 = new QWidget();
        dockWidgetContents_4->setObjectName(QString::fromUtf8("dockWidgetContents_4"));
        gridLayout_5 = new QGridLayout(dockWidgetContents_4);
        gridLayout_5->setObjectName(QString::fromUtf8("gridLayout_5"));
        tabWidget = new QTabWidget(dockWidgetContents_4);
        tabWidget->setObjectName(QString::fromUtf8("tabWidget"));
        tab_1 = new QWidget();
        tab_1->setObjectName(QString::fromUtf8("tab_1"));
        tabWidget->addTab(tab_1, QString());

        gridLayout_5->addWidget(tabWidget, 0, 0, 1, 1);

        dockWidget_3->setWidget(dockWidgetContents_4);
        MainWindow->addDockWidget(Qt::LeftDockWidgetArea, dockWidget_3);

        menubar->addAction(menuFile->menuAction());
        menubar->addAction(menuData->menuAction());
        menubar->addAction(menuModels->menuAction());
        menubar->addAction(menuGraphs->menuAction());
        menubar->addAction(menuExtensions->menuAction());
        menubar->addAction(menuWindow->menuAction());
        menubar->addAction(menuHelp->menuAction());
        menuFile->addAction(actionNewProject);
        menuFile->addAction(actionOpenProject);
        menuFile->addAction(menuOpen_Recents->menuAction());
        menuFile->addAction(actionSaveAs);
        menuFile->addSeparator();
        menuFile->addAction(actionQuit);
        menuFile->addSeparator();
        menuFile->addAction(actionPreferences);
        menuOpen_Recents->addAction(action_1);
        menuOpen_Recents->addAction(action_2);
        menuOpen_Recents->addAction(action_3);
        menuOpen_Recents->addAction(action_4);
        menuModels->addAction(actionPCA);
        menuModels->addAction(actionPCA_Prediction);
        menuModels->addSeparator();
        menuModels->addAction(actionPLS_Regression);
        menuModels->addAction(actionPLS_Discriminant_Analysis);
        menuModels->addAction(actionPLS_Validator);
        menuModels->addAction(actionPLS_Prediction);
        menuModels->addSeparator();
        menuModels->addAction(actionEPLS_Regression);
        menuModels->addAction(actionEPLS_Discriminant_Analysis);
        menuModels->addAction(actionEPLS_Validator);
        menuModels->addAction(actionEPLS_Prediction);
        menuModels->addSeparator();
        menuModels->addAction(actionMLR);
        menuModels->addAction(actionMLR_Validator);
        menuModels->addAction(actionMLR_Prediction);
        menuModels->addSeparator();
        menuModels->addAction(actionLDA);
        menuModels->addAction(actionLDA_Validator);
        menuModels->addAction(actionLDA_Prediction);
        menuGraphs->addAction(menuVariable->menuAction());
        menuGraphs->addAction(menuPlot_PCA_Model->menuAction());
        menuGraphs->addAction(menuPlot_PLS_Model->menuAction());
        menuGraphs->addAction(menuEPLS_plots->menuAction());
        menuGraphs->addAction(menuPlot_MLR->menuAction());
        menuGraphs->addAction(menuPlot_LDA->menuAction());
        menuVariable->addAction(actionVariableDistribution);
        menuVariable->addAction(actionVariable_vs_Variable);
        menuPlot_MLR->addAction(actionMLR_Recalc_vs_Exp);
        menuPlot_MLR->addAction(actionMLR_Recalc_Residuals_vs_Exp);
        menuPlot_MLR->addAction(actionMLR_Beta_Coefficients);
        menuPlot_MLR->addSeparator();
        menuPlot_MLR->addAction(actionMLR_Predict_vs_Exp);
        menuPlot_MLR->addAction(actionMLR_Predict_Residuals_vs_Exp);
        menuPlot_MLR->addAction(actionMLR_Y_Scrambling_Plot);
        menuPlot_MLR->addSeparator();
        menuPlot_MLR->addAction(actionMLR_Recal_vs_Exp_and_Prediction);
        menuPlot_MLR->addAction(actionMLR_Predict_vs_Exp_and_Prediction);
        menuPlot_PLS_Model->addAction(menu2D_Space_3->menuAction());
        menuPlot_PLS_Model->addAction(menu3D_Space_3->menuAction());
        menu3D_Space_3->addAction(actionPLS3D_ttt_Score_Plot);
        menu3D_Space_3->addAction(actionPLS3D_uuu_Score_Plot);
        menu3D_Space_3->addAction(actionPLS3D_ppp_Loadings_Plot);
        menu3D_Space_3->addAction(actionPLS3D_qqq_Loadings_Plot);
        menu3D_Space_3->addAction(actionPLS3D_www_Weights_Plot);
        menu3D_Space_3->addSeparator();
        menu3D_Space_3->addAction(actionPLS3D_ttt_Score_Plot_Prediction);
        menu3D_Space_3->addSeparator();
        menu3D_Space_3->addAction(actionPLS3D_Q2_Dynamic_Sample_Validator_Plot);
        menu3D_Space_3->addAction(actionPLS3D_SDEP_Dynamic_Sample_Validator_Plot);
        menu2D_Space_3->addAction(actionPLS_Plot);
        menu2D_Space_3->addAction(actionPLS2D_tt_Score_Plot);
        menu2D_Space_3->addAction(actionPLS2D_uu_Score_Plot);
        menu2D_Space_3->addAction(actionPLS2D_pp_Loadings_Plot);
        menu2D_Space_3->addAction(actionPLS2D_qq_Loadings_Plot);
        menu2D_Space_3->addAction(actionPLS2D_p_q_p_q_Loadings_Plot);
        menu2D_Space_3->addAction(actionPLS2D_ww_Weights_Plot);
        menu2D_Space_3->addAction(actionPLSBeta_Coefficients);
        menu2D_Space_3->addAction(actionBetaCoeffDWPlot);
        menu2D_Space_3->addSeparator();
        menu2D_Space_3->addAction(actionPLSRecalc_vs_Exp);
        menu2D_Space_3->addAction(actionPLSRecalc_Residuals_vs_Exp);
        menu2D_Space_3->addAction(actionPLSPred_vs_Exp);
        menu2D_Space_3->addAction(actionPLSPred_Residuals_vs_Exp);
        menu2D_Space_3->addSeparator();
        menu2D_Space_3->addAction(actionPLSR2_Q2);
        menu2D_Space_3->addAction(actionPLSRMSE);
        menu2D_Space_3->addSeparator();
        menu2D_Space_3->addAction(actionPLSROC_Curve);
        menu2D_Space_3->addAction(actionPLSROC_AUC_recalculated_predicted);
        menu2D_Space_3->addAction(actionPLSPrecision_recall_Curve);
        menu2D_Space_3->addAction(actionPLSPrecision_Recall_AUC_recalculated_predicted);
        menu2D_Space_3->addSeparator();
        menu2D_Space_3->addAction(actionPLSYScrambling);
        menu2D_Space_3->addSeparator();
        menu2D_Space_3->addAction(actionPLS2DScore_Plot_Prediction);
        menu2D_Space_3->addAction(actionPLSRecalc_vs_Exp_with_Prediction);
        menu2D_Space_3->addAction(actionPLSPred_vs_Exp_with_Prediction);
        menu2D_Space_3->addAction(actionPLSR2_Prediction);
        menu2D_Space_3->addAction(actionPLSRMSEModel_and_External_Prediction);
        menu2D_Space_3->addAction(actionROC_AUC_recalculated_and_external_prediction);
        menu2D_Space_3->addAction(actionPrecision_recall_AUC_recalculated_predicted);
        menuPlot_LDA->addAction(action2D_Feature_Plot);
        menuPlot_LDA->addAction(action3D_Feature_Plot);
        menuPlot_LDA->addAction(actionProbability_Distribution_Plot);
        menuPlot_LDA->addAction(actionLDAROC_Curve);
        menuPlot_LDA->addAction(actionLDAPrecision_Recall_Curve);
        menuPlot_LDA->addSeparator();
        menuPlot_LDA->addAction(action2D_Feature_Plot_and_Predictions);
        menuPlot_LDA->addAction(action3D_Feature_Plot_and_Predictions);
        menuPlot_LDA->addAction(actionProbability_Distribution_Plot_and_Predictions);
        menuPlot_PCA_Model->addAction(menu2D_Space->menuAction());
        menuPlot_PCA_Model->addAction(menu3D_Space->menuAction());
        menu3D_Space->addAction(actionPCA3DScore_Plot);
        menu3D_Space->addAction(actionPCA3DLoadings_Plot);
        menu3D_Space->addSeparator();
        menu3D_Space->addAction(actionPCA3DScore_Plot_Prediction);
        menu2D_Space->addAction(actionPCA2DScore_Plot);
        menu2D_Space->addAction(actionPCA2DLoadings_Plot);
        menu2D_Space->addAction(actionPCA2DExpVarPlot);
        menu2D_Space->addSeparator();
        menu2D_Space->addAction(actionPCA2DScore_Plot_Prediction);
        menuEPLS_plots->addAction(actionEPLSRecalculated_vs_Experimental);
        menuEPLS_plots->addAction(actionEPLSPredicted_vs_Experimental);
        menuEPLS_plots->addSeparator();
        menuEPLS_plots->addAction(actionEPLSR2_and_Q2);
        menuEPLS_plots->addAction(actionEPLSROC_curves);
        menuEPLS_plots->addAction(actionEPLSROC_AUC_recalculated_predicted);
        menuEPLS_plots->addAction(actionEPLSPrecision_recall_curves);
        menuEPLS_plots->addAction(actionEPLSPrecision_Recall_AUC_recalculated_predicted);
        menuData->addAction(actionAdd_Remove_Object_Labels);
        menuData->addAction(actionAdd_Remove_Variable_Labels);
        menuData->addSeparator();
        menuData->addAction(actionAdvanced_Pretreatment);
        menuData->addAction(actionExtract_Data_Objects_and_Variables);
        menuData->addAction(actionMerge_Data);
        menuHelp->addAction(actionManual);
        menuHelp->addAction(actionAbout);
        menuWindow->addSeparator();
        menuWindow->addAction(actionLog_Window);
        menuWindow->addAction(actionProject_Window);
        menuWindow->addAction(actionViewer_Window);
        menuWindow->addAction(actionCascade_SubWindows);
        menuWindow->addAction(actionTile_SubWindows);

        retranslateUi(MainWindow);

        tabWidget->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(MainWindow);
    } // setupUi

    void retranslateUi(QMainWindow *MainWindow)
    {
        MainWindow->setWindowTitle(QCoreApplication::translate("MainWindow", "QStudioMetrics", nullptr));
        actionOpenProject->setText(QCoreApplication::translate("MainWindow", "Open Project...", nullptr));
        actionQuit->setText(QCoreApplication::translate("MainWindow", "Quit", nullptr));
        actionPCA->setText(QCoreApplication::translate("MainWindow", "PCA", nullptr));
        actionPLS_Regression->setText(QCoreApplication::translate("MainWindow", "PLS Regression", nullptr));
        actionAbout->setText(QCoreApplication::translate("MainWindow", "About", nullptr));
        actionAdd_Remove_Variable_Labels->setText(QCoreApplication::translate("MainWindow", "Add/Show/Remove Variable Labels", nullptr));
        actionSaveAs->setText(QCoreApplication::translate("MainWindow", "Save Project As...", nullptr));
        actionExport->setText(QCoreApplication::translate("MainWindow", "Export", nullptr));
        actionUPLS->setText(QCoreApplication::translate("MainWindow", "UPLS", nullptr));
        actionLog_Window->setText(QCoreApplication::translate("MainWindow", "Log Window", nullptr));
        actionProject_Window->setText(QCoreApplication::translate("MainWindow", "Project Window", nullptr));
        actionUPCA->setText(QCoreApplication::translate("MainWindow", "UPCA", nullptr));
        actionNewProject->setText(QCoreApplication::translate("MainWindow", "New Project", nullptr));
        actionTest->setText(QCoreApplication::translate("MainWindow", "Test", nullptr));
        actionPCA2DScore_Plot->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot", nullptr));
        actionPCA2DLoadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p Loadings Plot", nullptr));
        actionPCA3DScore_Plot->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot", nullptr));
        actionPCA3DLoadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p/p Loadings Plot", nullptr));
        actionUPCA2DScore_Plot->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot", nullptr));
        actionUPCA2DLoadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p Loadings Plot", nullptr));
        actionUPCA3DScore_Plot->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot", nullptr));
        actionUPCA3DLoadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p/p Loadings Plot", nullptr));
        actionPLS_Plot->setText(QCoreApplication::translate("MainWindow", "t/u PLS Plot", nullptr));
        actionPLS2D_tt_Score_Plot->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot", nullptr));
        actionPLS2D_pp_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p Loadings Plot", nullptr));
        actionPLS2D_ww_Weights_Plot->setText(QCoreApplication::translate("MainWindow", "w/w Weights Plot", nullptr));
        actionPLSPred_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Pred vs Exp", nullptr));
        actionPLSR2_Q2->setText(QCoreApplication::translate("MainWindow", "R2 (Training) and Q2 (Validation)", nullptr));
        actionPLS3D_ttt_Score_Plot->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot", nullptr));
        actionPLS3D_ppp_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p/p Loadings Plot", nullptr));
        actionPLS3D_www_Weights_Plot->setText(QCoreApplication::translate("MainWindow", "w/w/w Weights Plot", nullptr));
        actionUPLS_Plot->setText(QCoreApplication::translate("MainWindow", "t/u UPLS Plot", nullptr));
        actionUPLS2D_tt_Score_Plot->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot", nullptr));
        actionUPLS2D_pp_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p Loadings Plot", nullptr));
        actionUPLS2D_ww_Weights_Plot->setText(QCoreApplication::translate("MainWindow", "w/w Weights Plot", nullptr));
        actionUPLSPred_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Pred vs Exp", nullptr));
        actionUPLSR2_Q2->setText(QCoreApplication::translate("MainWindow", "R2 and  Q2", nullptr));
        actionUPLS3D_ttt_Score_Plot->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot", nullptr));
        actionUPLS3D_ppp_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "p/p/p Loadings Plot", nullptr));
        actionUPLS3D_www_Weights_Plot->setText(QCoreApplication::translate("MainWindow", "w/w/w Weights Plot", nullptr));
        actionPLS_Validator->setText(QCoreApplication::translate("MainWindow", "PLS Validator", nullptr));
        actionUPLS_Validator->setText(QCoreApplication::translate("MainWindow", "UPLS Validator", nullptr));
        actionPLS_Prediction->setText(QCoreApplication::translate("MainWindow", "PLS Prediction", nullptr));
        actionUPLS_Prediction->setText(QCoreApplication::translate("MainWindow", "UPLS Prediction", nullptr));
        actionPCA_Prediction->setText(QCoreApplication::translate("MainWindow", "PCA Prediction", nullptr));
        actionUPCA_Prediction->setText(QCoreApplication::translate("MainWindow", "UPCA Prediction", nullptr));
        actionPLS2D_uu_Score_Plot->setText(QCoreApplication::translate("MainWindow", "u/u Score Plot", nullptr));
        actionPLS2D_qq_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "q/q Loadings Plot", nullptr));
        actionPLS3D_uuu_Score_Plot->setText(QCoreApplication::translate("MainWindow", "u/u/u Score Plot", nullptr));
        actionPLS3D_qqq_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "q/q/q Loadings Plot", nullptr));
        actionUPLS2D_uu_Score_Plot->setText(QCoreApplication::translate("MainWindow", "u/u Score Plot", nullptr));
        actionUPLS2D_qq_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "q/q Loadings Plot", nullptr));
        actionUPLS3D_uuu_Score_Plot->setText(QCoreApplication::translate("MainWindow", "u/u/u Score Plot", nullptr));
        actionUPLS3D_qqq_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "q/q/q Loadings Plot", nullptr));
        action_Test->setText(QCoreApplication::translate("MainWindow", "Test", nullptr));
        actionPCA2DScore_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot with Prediction", nullptr));
        actionPCA3DScore_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot Prediction", nullptr));
        actionUPCA2DScore_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot Prediction", nullptr));
        actionUPCA3DScore_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot Prediction", nullptr));
        actionPLS2DScore_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot and External Prediction", nullptr));
        actionPLSRecalc_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Recalc vs Exp", nullptr));
        actionPLS3D_ttt_Score_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot and Prediction", nullptr));
        actionCascade_SubWindows->setText(QCoreApplication::translate("MainWindow", "Cascade SubWindows", nullptr));
        actionTile_SubWindows->setText(QCoreApplication::translate("MainWindow", "Tile SubWindow", nullptr));
        actionUPLS2DScore_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t Score Plot and Prediction", nullptr));
        actionUPLS3D_ttt_Score_Plot_Prediction->setText(QCoreApplication::translate("MainWindow", "t/t/t Score Plot and Prediction", nullptr));
        actionUPLSRecalc_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Recalc vs Exp", nullptr));
        actionUPLSRecalc_vs_Exp_with_Prediction->setText(QCoreApplication::translate("MainWindow", "Recalc vs Exp and Prediction", nullptr));
        actionPLSRecalc_vs_Exp_with_Prediction->setText(QCoreApplication::translate("MainWindow", "Recalc vs Exp and External Prediction", nullptr));
        actionVariableDistribution->setText(QCoreApplication::translate("MainWindow", "Distribution", nullptr));
        actionVariable_vs_Variable->setText(QCoreApplication::translate("MainWindow", "Variable vs Variable", nullptr));
        actionAdd_Remove_Object_Labels->setText(QCoreApplication::translate("MainWindow", "Add/Show/Remove Object Labels", nullptr));
        actionExtract_Data_Objects_and_Variables->setText(QCoreApplication::translate("MainWindow", "Extract Data", nullptr));
        action2DSpace_Clusters->setText(QCoreApplication::translate("MainWindow", "2D Space Cluster", nullptr));
        action3DSpace_Clusters->setText(QCoreApplication::translate("MainWindow", "3D Space Cluster", nullptr));
        actionClustering->setText(QCoreApplication::translate("MainWindow", "Clustering", nullptr));
        actionPLSVariableSelection->setText(QCoreApplication::translate("MainWindow", "PLS Variable Selection", nullptr));
        actionUPLSVariableSelection->setText(QCoreApplication::translate("MainWindow", "UPLS Variable Selection", nullptr));
        actionVarSel_R2Q2_Plot->setText(QCoreApplication::translate("MainWindow", "Variable Selection R2/Q2", nullptr));
        actionVarSel_Ftest_Nvar_Plot->setText(QCoreApplication::translate("MainWindow", "Variable Selection F-test /  N\302\260 Variables", nullptr));
        actionVarSel_Ftest_Q2_Plot->setText(QCoreApplication::translate("MainWindow", "Variable Selection F-test / Q2", nullptr));
        actionModIncVar_Variables_Plot->setText(QCoreApplication::translate("MainWindow", "Model Including Variable / Variables", nullptr));
        actionViewer_Window->setText(QCoreApplication::translate("MainWindow", "Viewer Window", nullptr));
        actionShow_Object_Labels->setText(QCoreApplication::translate("MainWindow", "Show Object Labels", nullptr));
        actionShow_Variable_Labels->setText(QCoreApplication::translate("MainWindow", "Show Variable Labels", nullptr));
        actionPLSR2_Prediction->setText(QCoreApplication::translate("MainWindow", "R2/Q2 Model and R2 External Prediction", nullptr));
        actionUPLSR2_Prediction->setText(QCoreApplication::translate("MainWindow", "R2 Prediction", nullptr));
        actionPLSRecalc_Residuals_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Recalc Residuals vs Exp", nullptr));
        actionPLSPred_Residuals_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Pred Residuals vs Exp", nullptr));
        actionUPLSRecal_Residuals_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Recal Residuals vs Exp", nullptr));
        actionUPLSPred_Residuals_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Pred Residuals vs Exp", nullptr));
        actionMLR->setText(QCoreApplication::translate("MainWindow", "MLR", nullptr));
        actionMLR_Validator->setText(QCoreApplication::translate("MainWindow", "MLR Validator", nullptr));
        actionMLR_Prediction->setText(QCoreApplication::translate("MainWindow", "MLR Prediction", nullptr));
        actionMLR_Recalc_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Recalc vs Exp", nullptr));
        actionMLR_Recalc_Residuals_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Recalc Residuals vs Exp", nullptr));
        actionMLR_Predict_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Predict vs Exp", nullptr));
        actionMLR_Predict_Residuals_vs_Exp->setText(QCoreApplication::translate("MainWindow", "Predict Residuals vs Exp", nullptr));
        actionMLR_R2_and_Q2->setText(QCoreApplication::translate("MainWindow", "R2 and Q2", nullptr));
        actionMLR_Recal_vs_Exp_and_Prediction->setText(QCoreApplication::translate("MainWindow", "Recal vs Exp and Prediction", nullptr));
        actionMLR_R2_Prediction->setText(QCoreApplication::translate("MainWindow", "R2 Prediction", nullptr));
        actionPLSPred_vs_Exp_with_Prediction->setText(QCoreApplication::translate("MainWindow", "Pred vs Exp and External Prediction", nullptr));
        actionUPLSPred_vs_Exp_with_Prediction->setText(QCoreApplication::translate("MainWindow", "Pred vs Exp and Prediction", nullptr));
        action_1->setText(QCoreApplication::translate("MainWindow", "-", nullptr));
        action_2->setText(QCoreApplication::translate("MainWindow", "-", nullptr));
        action_3->setText(QCoreApplication::translate("MainWindow", "-", nullptr));
        action_4->setText(QCoreApplication::translate("MainWindow", "-", nullptr));
        actionMLR_Predict_vs_Exp_and_Prediction->setText(QCoreApplication::translate("MainWindow", "Predict vs Exp and Prediction", nullptr));
        actionLDA->setText(QCoreApplication::translate("MainWindow", "LDA", nullptr));
        actionLDA_Validator->setText(QCoreApplication::translate("MainWindow", "LDA Validator", nullptr));
        actionLDA_Prediction->setText(QCoreApplication::translate("MainWindow", "LDA Prediction", nullptr));
        action2D_Feature_Plot->setText(QCoreApplication::translate("MainWindow", "2D Feature Plot", nullptr));
        action3D_Feature_Plot->setText(QCoreApplication::translate("MainWindow", "3D Feature Plot", nullptr));
        actionProbability_Distribution_Plot->setText(QCoreApplication::translate("MainWindow", "Probability Distribution Plot", nullptr));
        action2D_Feature_Plot_and_Predictions->setText(QCoreApplication::translate("MainWindow", "2D Feature Plot and Predictions", nullptr));
        action3D_Feature_Plot_and_Predictions->setText(QCoreApplication::translate("MainWindow", "3D Feature Plot and Predictions", nullptr));
        actionProbability_Distribution_Plot_and_Predictions->setText(QCoreApplication::translate("MainWindow", "Probability Distribution Plot and Predictions", nullptr));
        actionPCA2DLoadingsMVAND_Plot->setText(QCoreApplication::translate("MainWindow", "p Loading Multivariate Normal Distribution", nullptr));
        actionManual->setText(QCoreApplication::translate("MainWindow", "Manual", nullptr));
        actionAdvanced_Pretreatment->setText(QCoreApplication::translate("MainWindow", "Advanced Pretreatment", nullptr));
        actionMerge_Data->setText(QCoreApplication::translate("MainWindow", "Merge Data", nullptr));
        actionQ2_Scrambled->setText(QCoreApplication::translate("MainWindow", "Q2 Scrambled", nullptr));
        actionPLSYScrambling->setText(QCoreApplication::translate("MainWindow", "Y Scrambling Plot", nullptr));
        actionSDEP_Scrambled->setText(QCoreApplication::translate("MainWindow", "SDEP Scrambled", nullptr));
        actionSDEC_Scrambled->setText(QCoreApplication::translate("MainWindow", "SDEC Scrambled", nullptr));
        actionMLR_Y_Scrambling_Plot->setText(QCoreApplication::translate("MainWindow", "Y Scrambling Plot", nullptr));
        actionPLSQ2_Sample_Validator->setText(QCoreApplication::translate("MainWindow", "Q2 Sample Validator Plot", nullptr));
        actionPLSSDEP_Sample_Validator_Plot->setText(QCoreApplication::translate("MainWindow", "SDEP Sample Validator Plot", nullptr));
        actionPLS3D_Q2_Dynamic_Sample_Validator_Plot->setText(QCoreApplication::translate("MainWindow", "Q2 Dynamic Sample Validator Plot", nullptr));
        actionPLS3D_SDEP_Dynamic_Sample_Validator_Plot->setText(QCoreApplication::translate("MainWindow", "SDEP Dynamic Sample Validator Plot", nullptr));
        actionPLSBeta_Coefficients->setText(QCoreApplication::translate("MainWindow", "Beta Coefficients Plot", nullptr));
        actionMLR_Beta_Coefficients->setText(QCoreApplication::translate("MainWindow", "Beta Coefficients", nullptr));
        actionPreferences->setText(QCoreApplication::translate("MainWindow", "Preferences", nullptr));
        actionBetaCoeffDWPlot->setText(QCoreApplication::translate("MainWindow", "Beta Coefficients Durbin-Watson Plot", nullptr));
        actionPLS_DA->setText(QCoreApplication::translate("MainWindow", "PLS-DA", nullptr));
        actionPLS_DA_Validator->setText(QCoreApplication::translate("MainWindow", "PLS-DA Validator", nullptr));
        actionPLS_DA_Prediction->setText(QCoreApplication::translate("MainWindow", "PLS-DA Prediction", nullptr));
        actionPLS2D_p_q_p_q_Loadings_Plot->setText(QCoreApplication::translate("MainWindow", "p-q/p-q Loadings Plot", nullptr));
        actionOpenProject_OLD_VERSION->setText(QCoreApplication::translate("MainWindow", "Open Project OLD VERSION", nullptr));
        actionEPLS_Regression->setText(QCoreApplication::translate("MainWindow", "EPLS Regression", nullptr));
        actionPLS_Discriminant_Analysis->setText(QCoreApplication::translate("MainWindow", "PLS Discriminant Analysis", nullptr));
        actionEPLS_Discriminant_Analysis->setText(QCoreApplication::translate("MainWindow", "EPLS Discriminant Analysis", nullptr));
        actionEPLS_Validator->setText(QCoreApplication::translate("MainWindow", "EPLS Validator", nullptr));
        actionEPLS_Prediction->setText(QCoreApplication::translate("MainWindow", "EPLS Prediction", nullptr));
        actionEPLSRecalculated_vs_Experimental->setText(QCoreApplication::translate("MainWindow", "Recalculated vs Experimental", nullptr));
        actionEPLSPredicted_vs_Experimental->setText(QCoreApplication::translate("MainWindow", "Predicted vs Experimental", nullptr));
        actionEPLSR2_and_Q2->setText(QCoreApplication::translate("MainWindow", "R2 and Q2", nullptr));
        actionAUC_recalculated_and_AUC_predicted->setText(QCoreApplication::translate("MainWindow", "AUC recalculated and AUC predicted", nullptr));
        actionEPLSROC_AUC_recalculated_predicted->setText(QCoreApplication::translate("MainWindow", "ROC AUC recalculated/predicted", nullptr));
        actionEPLSPrecision_Recall_AUC_recalculated_predicted->setText(QCoreApplication::translate("MainWindow", "Precision-recall AUC recalculated/predicted", nullptr));
        actionPLSROC_AUC_recalculated_predicted->setText(QCoreApplication::translate("MainWindow", "ROC AUC recalculated/predicted", nullptr));
        actionPLSPrecision_Recall_AUC_recalculated_predicted->setText(QCoreApplication::translate("MainWindow", "Precision-recall AUC recalculated/predicted", nullptr));
        actionROC_AUC_recalculated_and_external_prediction->setText(QCoreApplication::translate("MainWindow", "ROC AUC recalculated and external prediction", nullptr));
        actionPrecision_recall_AUC_recalculated_predicted->setText(QCoreApplication::translate("MainWindow", "Precision-recall AUC recalculated/predicted", nullptr));
        actionPLSROC_Curve->setText(QCoreApplication::translate("MainWindow", "ROC curve", nullptr));
        actionPLSPrecision_recall_Curve->setText(QCoreApplication::translate("MainWindow", "Precision-recall curve", nullptr));
        actionEPLSROC_curves->setText(QCoreApplication::translate("MainWindow", "ROC curves", nullptr));
        actionEPLSPrecision_recall_curves->setText(QCoreApplication::translate("MainWindow", "Precision-recall curves", nullptr));
        actionLDAROC_Curve->setText(QCoreApplication::translate("MainWindow", "ROC Curve", nullptr));
        actionLDAPrecision_Recall_Curve->setText(QCoreApplication::translate("MainWindow", "Precision-Recall Curve", nullptr));
        actionPCA2DExpVarPlot->setText(QCoreApplication::translate("MainWindow", "Explained Variance and Broken-Stick Model", nullptr));
        actionPLSRMSE->setText(QCoreApplication::translate("MainWindow", "RMSE (Training/Validation)", nullptr));
        actionPLSMAE->setText(QCoreApplication::translate("MainWindow", "Mean absolute error (Training/Validation)", nullptr));
        actionMeans_squared_error_Training_Validation_Ext_prediction->setText(QCoreApplication::translate("MainWindow", "Mean squared error (Training/Validation/Ext. prediction)", nullptr));
        actionMean_squared_error_External_prediction->setText(QCoreApplication::translate("MainWindow", "Mean squared error (External prediction)", nullptr));
        actionMean_absolute_error_External_prediction->setText(QCoreApplication::translate("MainWindow", "Mean absolute error (External prediction)", nullptr));
        actionPLSRMSEModel_and_External_Prediction->setText(QCoreApplication::translate("MainWindow", "RMSE (Training/Validation/External prediction)", nullptr));
        actionPLSMAEModel_and_External_Prediction->setText(QCoreApplication::translate("MainWindow", "Mean absolute error Model and External prediction", nullptr));
        abortButton->setText(QCoreApplication::translate("MainWindow", "Abort", nullptr));
        menuFile->setTitle(QCoreApplication::translate("MainWindow", "&File", nullptr));
        menuOpen_Recents->setTitle(QCoreApplication::translate("MainWindow", "Recent Files...", nullptr));
        menuModels->setTitle(QCoreApplication::translate("MainWindow", "&Statistical models", nullptr));
        menuGraphs->setTitle(QCoreApplication::translate("MainWindow", "&Plots", nullptr));
        menuVariable->setTitle(QCoreApplication::translate("MainWindow", "Variable plots", nullptr));
        menuPlot_MLR->setTitle(QCoreApplication::translate("MainWindow", "MLR plots", nullptr));
        menuPlot_PLS_Model->setTitle(QCoreApplication::translate("MainWindow", "PLS plots", nullptr));
        menu3D_Space_3->setTitle(QCoreApplication::translate("MainWindow", "3D Space", nullptr));
        menu2D_Space_3->setTitle(QCoreApplication::translate("MainWindow", "2D Space", nullptr));
        menuPlot_LDA->setTitle(QCoreApplication::translate("MainWindow", "LDA plots", nullptr));
        menuPlot_PCA_Model->setTitle(QCoreApplication::translate("MainWindow", "PCA plots", nullptr));
        menu3D_Space->setTitle(QCoreApplication::translate("MainWindow", "3D Space", nullptr));
        menu2D_Space->setTitle(QCoreApplication::translate("MainWindow", "2D Space", nullptr));
        menuEPLS_plots->setTitle(QCoreApplication::translate("MainWindow", "EPLS plots", nullptr));
        menuData->setTitle(QCoreApplication::translate("MainWindow", "&Data operations", nullptr));
        menuHelp->setTitle(QCoreApplication::translate("MainWindow", "&Help", nullptr));
        menuWindow->setTitle(QCoreApplication::translate("MainWindow", "&Window", nullptr));
        menuExtensions->setTitle(QCoreApplication::translate("MainWindow", "Extensions", nullptr));
        dockWidget->setWindowTitle(QCoreApplication::translate("MainWindow", "Projects", nullptr));
        addProject->setText(QCoreApplication::translate("MainWindow", "Add", nullptr));
        removeProject->setText(QCoreApplication::translate("MainWindow", "Remove", nullptr));
        dockWidget_2->setWindowTitle(QCoreApplication::translate("MainWindow", "Log", nullptr));
        dockWidget_3->setWindowTitle(QCoreApplication::translate("MainWindow", "Viewer", nullptr));
        tabWidget->setTabText(tabWidget->indexOf(tab_1), QCoreApplication::translate("MainWindow", "No Objetcs", nullptr));
    } // retranslateUi

};

namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_MAINWINDOW_H
